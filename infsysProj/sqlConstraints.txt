Missing: 6), I am unsure how to handle arrays of authors in Publcation



inheritance in postgres https://www.postgresql.org/docs/9.0/static/ddl-inherit.html

ALTER TABLE DomainObject (
	ADD unique USING INDEX id
);

//START Maybe better

ALTER TABLE DomainObject
	ADD UNIQUE (id);

//END

ALTER TABLE Publication(
	title String NOT NULL,
	year int,
	CHECK (year > 1900 && year < Now().year +1),
	CHECK ((SELECT COUNT(*) c FROM (SELECT * FROM authors WHERE publication = id) > 0)
);

//START

ALTER TABLE Publication
ALTER COLUMN title String SET NOT NULL;

ALTER TABLE Publication
ADD CONSTRAINT Check_Year CHECK (year > 1900 && year < Now().year +1);

ALTER TABLE Publication
ADD CONSTRAINT Check_Authors CHECK ((SELECT COUNT(*) c FROM (SELECT * FROM authors WHERE publication = id) > 0);

//END

CREATE TRIGGER t1
BEFORE
INSERT OR UPDATE
isbn
On Proceedings
WHEN (NEW.isbn != OLD.isbn)(
	note = note + "ISBN updated, old value was " + OLD.isbn
);

ALTER TABLE InProceedings (
	crossref String NOT NULL,
	pages String,
	FOREIGN KEY (crossref) REFERENCES Proceedings(id),
	CHECK (note == "Draft" || note == "Submitted" || note =="Accepted" || note == "Published"),
	CHECK(pages LIKE [0-9] OR pages LIKE [0-9]-[0-9] or pages == NULL)
);

//START

ALTER TABLE InProceedings
ALTER COLUMN crossref String SET NOT NULL;

ALTER TABLE InProceedings
ADD FOREIGN KEY (crossref) REFERENCES Proceedings(id);

ALTER TABLE IProceedings
ADD CONSTRAINT Check_Note CHECK (note == "Draft" || note == "Submitted" || note =="Accepted" || note == "Published");

ALTER TABLE IProceedings
ADD CONSTRAINT Check_Page CHECK (pages LIKE [0-9] OR pages LIKE [0-9]-[0-9] or pages == NULL);

//END


ALTER TABLE Proceedings(
	
	ON DELETE RESTRICT ON UPDATE CASCADE
);

//START

ALTER TABLE Proceedings
ADD CONSTRAINT Proceeding_Delete ON DELETE RESTRICT ON UPDATE CASCADE;

//END

ALTER TABLE authors(
	person String NOT NULL,
	FOREIGN KEY (person) REFERENCES Person(id),
	publication String NOT NULL,
	FOREIGN KEY publication REFERENCES Publication(id)
);

//START

ALTER TABLE Authors
ALTER COLUMN person String SET NOT NULL;

ALTER TABLE Authors
ALTER COLUMN publication STRNIG SET NOT NULL;

ALTER TABLE Authors
ADD FOREIGN KEY (person) REFERENCES Person(id);

ALTER TABLE Authors
ADD FOREIGN KEY (publication) REFERENCES Publication(id);

//END

